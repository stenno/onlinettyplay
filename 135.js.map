{"version":3,"file":"135.js","mappings":"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","sources":["webpack://my-webpack-project/webpack/bootstrap","webpack://my-webpack-project/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://my-webpack-project/./src/workers/parseTTY.js","webpack://my-webpack-project/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://my-webpack-project/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://my-webpack-project/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://my-webpack-project/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://my-webpack-project/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","const cp437 = require('../terminal/cp437.json');\n\nconst TTYREC_HEADER_SIZE = 12; // bytes, 3 x Uint32\nconst parseHeader = (buffer) => {\n  const [timestamp, usec, byteLength] = new Uint32Array(buffer);\n  return ({ timestamp, usec, byteLength });\n};\nconst ibmToUnicode = (buffer) => Array.from(buffer, (c) => cp437[c] ?? String.fromCharCode(c)).join('');\n/* eslint-disable-next-line no-restricted-globals */\nself.onmessage = (e) => {\n  const {buffer, chunksize} = e.data;\n  const { byteLength: bufferLength } = buffer;\n  let offset = 0;\n  let tempPayloadOffset = 0;\n  let frames = [];\n  let index = 0;\n  let tempPayload = '';\n  // let's be honest, this code is super ugly.\n  while (offset < bufferLength) {\n    const payloadOffset = offset + TTYREC_HEADER_SIZE;\n    const { timestamp, usec, byteLength } = parseHeader(buffer.slice(offset, payloadOffset));\n    const payloadBuffer = buffer.slice(payloadOffset, payloadOffset + byteLength);\n\n    const payload = ibmToUnicode(new Uint8Array(payloadBuffer));\n    const toMillisec = timestamp * 1e3 + Math.floor(usec / 1e3);\n    const frame = {\n      timestamp: toMillisec,\n      payloadOffset: tempPayloadOffset,\n      offset,\n      byteLength,\n      index,\n    };\n    frames.push(frame);\n    tempPayload += payload;\n    tempPayloadOffset += byteLength;\n    index += 1;\n    if (frames.length >= chunksize) {\n      self.postMessage({\n        frames,\n        tempPayload,\n        lastIndex: index,\n      });\n      frames = [];\n      tempPayload = '';\n      tempPayloadOffset = 0;\n    }\n    offset += TTYREC_HEADER_SIZE + byteLength;\n  }\n  self.postMessage({\n    frames,\n    tempPayload,\n    lastIndex: index,\n  });\n  self.postMessage(['done', index]); /* eslint-disable-line no-restricted-globals */\n};\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","_arrayLikeToArray","arr","len","length","i","arr2","Array","cp437","require","parseHeader","buffer","Uint32Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","err","o","minLen","n","Object","prototype","toString","slice","constructor","name","from","test","TypeError","timestamp","usec","byteLength","ibmToUnicode","c","String","fromCharCode","join","self","onmessage","e","data","chunksize","bufferLength","offset","tempPayloadOffset","frames","index","tempPayload","payloadOffset","payloadBuffer","payload","Uint8Array","frame","Math","floor","postMessage","lastIndex"],"sourceRoot":""}